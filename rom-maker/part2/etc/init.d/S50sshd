#!/bin/sh
#
# sshd        Starts sshd.
#

# Make sure the ssh-keygen progam exists
[ -f /usr/bin/ssh-keygen ] || exit 0

umask 077

backup_ssh_keys() {
	if [ ! -f /app/usr/share/ssh_keys/has_keys ]; then
		mkdir -p /app/usr/share/ssh_keys
		/bin/cp /etc/ssh/ssh_host_rsa_key /app/usr/share/ssh_keys/ >/dev/null 2>&1
		/bin/cp /etc/ssh/ssh_host_rsa_key.pub /app/usr/share/ssh_keys/ >/dev/null 2>&1
		/bin/cp /etc/ssh/ssh_host_dsa_key /app/usr/share/ssh_keys/ >/dev/null 2>&1
		/bin/cp /etc/ssh/ssh_host_dsa_key.pub /app/usr/share/ssh_keys/ >/dev/null 2>&1
		/bin/cp /etc/ssh/ssh_host_ecdsa_key /app/usr/share/ssh_keys/ >/dev/null 2>&1
		/bin/cp /etc/ssh/ssh_host_ecdsa_key.pub /app/usr/share/ssh_keys/ >/dev/null 2>&1
		/bin/cp /etc/ssh/ssh_host_ed25519_key /app/usr/share/ssh_keys/ >/dev/null 2>&1
		/bin/cp /etc/ssh/ssh_host_ed25519_key.pub /app/usr/share/ssh_keys/ >/dev/null 2>&1
		echo "1" > /app/usr/share/ssh_keys/has_keys
		/bin/sync
	fi
}
restore_ssh_keys() {
	if [ -f /app/usr/share/ssh_keys/has_keys ]; then
		/bin/cp /app/usr/share/ssh_keys/ssh_host_rsa_key /etc/ssh/ >/dev/null 2>&1
		/bin/cp /app/usr/share/ssh_keys/ssh_host_rsa_key.pub /etc/ssh/ >/dev/null 2>&1
		/bin/cp /app/usr/share/ssh_keys/ssh_host_dsa_key /etc/ssh/ >/dev/null 2>&1
		/bin/cp /app/usr/share/ssh_keys/ssh_host_dsa_key.pub /etc/ssh/ >/dev/null 2>&1
		/bin/cp /app/usr/share/ssh_keys/ssh_host_ecdsa_key /etc/ssh/ >/dev/null 2>&1
		/bin/cp /app/usr/share/ssh_keys/ssh_host_ecdsa_key.pub /etc/ssh/ >/dev/null 2>&1
		/bin/cp /app/usr/share/ssh_keys/ssh_host_ed25519_key /etc/ssh/ >/dev/null 2>&1
		/bin/cp /app/usr/share/ssh_keys/ssh_host_ed25519_key.pub /etc/ssh/ >/dev/null 2>&1
	fi
}
start() {
	# Restore backup keys
	restore_ssh_keys

	# Create any missing keys
	/usr/bin/ssh-keygen -A

	# Backup keys
	backup_ssh_keys

	printf "Starting sshd: "
	/usr/sbin/sshd
	touch /var/lock/sshd
	echo "OK"
}
stop() {
	printf "Stopping sshd: "
	killall sshd
	rm -f /var/lock/sshd
	echo "OK"
}
restart() {
	stop
	start
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|reload)
	restart
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?

